
demos_fx <- function(df){
  df %>% 
    select(grade_core, gender_state, ethnicity_state, frl_state, sped_state, lep_state, district_core, school_core) %>% 
    mutate(across(everything(), ~ifelse(is.na(.), "Missing", .)),
           across(c(frl_state, sped_state, lep_state), ~recode(., "N" = "No", "Y" = "Yes")),
           across(c(frl_state, sped_state, lep_state), ~fct_expand(., "Yes","No", "Missing")),
           across(c(frl_state, sped_state, lep_state), ~fct_relevel(., "Yes","No", "Missing")),
           grade_core = paste("Grade", grade_core)) %>% 
    pivot_longer(
      cols = everything(),
      names_to = "demo",
      values_to = "values"
    ) %>% 
    mutate(
      demo = recode(demo,
                    grade_core = "Grade",
                    gender_state = "Gender",
                    ethnicity_state = "Ethnicity",
                    frl_state = "Free/Reduced Lunch",
                    sped_state = "Students with Disabilities (SWD)",
                    lep_state = "English Language Learners (EL)",
                    district_core = "School District",
                    school_core = "School")
      ) %>%
    group_by(demo, values) %>% 
    summarize(n = n(),
              pct = round(n/nrow(df) * 100, 0),
              stat = paste0(n, " (", pct, "%)")) %>% 
    select(demo, values, stat)
}

demos_fx(data_r) %>% 
  left_join(demos_fx(data_comp), by = c("demo", "values")) %>% 
  left_join(demos_fx(data_sbac), by = c("demo", "values")) %>% 
  ungroup() %>% 
  mutate(values = fct_relevel(values, "Missing", after = Inf),
         across(starts_with("stat"), ~ifelse(is.na(.), "--", .))) %>% 
  arrange(values) %>%
  gt(groupname_col = "demo", rowname_col = "values") %>% 
  row_group_order(
    groups = c("Grade", "Gender", "Ethnicity", "Free/Reduced Lunch",
               "Students with Disabilities (SWD)", "English Language Learners (EL)",
               "School District",
               "School")
  ) %>% 
  cols_align(
    align = "right",
    columns = starts_with("stat")
  ) %>% 
  tab_spanner(
    label = "RQ 1",
    columns = vars(stat.x)
  ) %>%
  tab_spanner(
    label = "RQ 2",
    columns = vars(stat.y)
  ) %>%
  tab_spanner(
    label = "RQ 3",
    columns = vars(stat)
  ) %>%
  cols_label(
    values = "",
    stat.x = md(paste0("*N* = ", nrow(data_r))),
    stat.y = md(paste0("*N* = ", nrow(data_comp))),
    stat = md(paste0("*N* = ", nrow(data_sbac)))
  ) %>% 
  apa_format_fx()

newlvl <- c("American Indian/Native Alaskan", "Asian", "Black/African American", "Hispanic", "Missing", "Multi-Racial", "Native Hawaiian/Other Pacific Islander", "White", "Yes", "No", "Missing")

data_r %>% 
  select(grade_core, gender_state, ethnicity_state, frl_state, sped_state, lep_state, district_core, school_core) %>% 
  mutate(across(everything(), ~ifelse(is.na(.), "Missing", .)),
         across(c(frl_state, sped_state, lep_state), ~recode(., "N" = "No", "Y" = "Yes")),
         across(c(frl_state, sped_state, lep_state), ~fct_expand(., "Yes","No", "Missing")),
         across(c(frl_state, sped_state, lep_state), ~fct_relevel(., "Yes","No", "Missing")),
         grade_core = paste("Grade", grade_core)) %>% 
  pivot_longer(
    cols = everything(),
    names_to = "demo",
    values_to = "values"
  ) %>% 
  mutate(
    demo = recode(demo,
      grade_core = "Grade",
      gender_state = "Gender",
      ethnicity_state = "Ethnicity",
      frl_state = "Free/Reduced Lunch",
      sped_state = "Students with Disabilities (SWD)",
      lep_state = "English Language Learners (EL)",
      district_core = "School District",
      school_core = "School"),
    demo = fct_relevel(demo, "Grade", "Gender", "Ethnicity", "Free/Reduced Lunch",
                       "Students with Disabilities (SWD)", "English Language Learners (EL)",
                       "School District",
                       "School") 
  ) %>%
  group_by(demo, values) %>% 
  summarize(n = n(),
            pct = round(n/nrow(data_comp) * 100, 0),
            stat = paste0(n, " (", pct, "%)")) %>% 
  select(demo, values, stat)






tbl_demos_merge <- tbl_merge(list(tble_rq1, tble_rq2, tble_rq3),
          tab_spanner = c(c("RQ 1", "RQ 2", "RQ 3"))) %>%
  bold_labels()

tbl_demos_merge$table_header <- tbl_demos_merge$table_header %>% mutate(label = str_remove_all(label, "\\**"),
                                                label = str_remove_all(label, "Characteristic"))
tbl_demos <- tbl_demos_merge %>% 
  as_gt() %>% 
  apa_format_fx() %>% 
  tab_style(
    style = list(
      cell_borders(
        sides = c("top", "bottom"),
        weight = px(2)
      )
    ),
    locations = list(
      cells_body(
        columns = everything(),
        rows = c(1, 5, 9, 18, 22, 26, 30, 35)
      )
    )
  )

tbl_demos %>% 
  tab_header(
    title = html("Table 1.<br><br><i>Sample Characteristics by Research Question</i>")) %>% 
  opt_align_table_header(align = c("left"))


tbl_merge(list(tble_rq1, tble_rq2, tble_rq3),
          tab_spanner = c(c("RQ 1", "RQ 2", "RQ 3"))) %>%
  bold_labels() %>% 
  mutate(table_header = map(table_header, ~mutate(., label = str_remove_all(label, "\\**"),
                                                    label = str_remove_all(label, "Characteristic"))))

tbl_demos_merge$table_header <- tbl_demos_merge$table_header %>% mutate(label = str_remove_all(label, "\\**"),
                                                                        label = str_remove_all(label, "Characteristic"))




my_table <- t(apply(cars, 2, function(x) # Create data
  round(c(Mean = mean(x), SD = sd(x), Min = min(x), Max = max(x)), 2)
))

apa_table(
  my_table
  , align = c("l", rep("r", 3))
  , caption = "A summary table of the cars dataset."
)

apa_table(
  cbind(my_table, my_table)
  , align = c("l", rep("r", 8))
  , caption = "A summary table of the cars dataset."
  , note = "This table was created using apa\\_table()"
  , added_stub_head = "Variables"
  , col_spanners = list(`Cars 1` = c(2, 5), `Cars 2` = c(6, 9))
)

apa_table(
  list(`Cars 1` = my_table, `Cars 2` = my_table)
  , caption = "A summary table of the cars dataset."
  , added_stub_head = "Variables"
)

names(data_r)
